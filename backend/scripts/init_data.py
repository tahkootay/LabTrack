"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ LabTrack
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(__file__)))

from sqlalchemy.orm import Session
from app.db.database import SessionLocal, engine
from app.models import User, Analyte

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    db: Session = SessionLocal()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è v1
        user = db.query(User).filter(User.id == 1).first()
        if not user:
            user = User(
                id=1,
                email=None,
                is_active=True
            )
            db.add(user)
            db.commit()
            print("‚úÖ –°–æ–∑–¥–∞–Ω –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        else:
            print("üìã –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∞–Ω–∞–ª–∏—Ç—ã
        analytes_data = [
            {
                "code": "glucose",
                "name": "–ì–ª—é–∫–æ–∑–∞",
                "default_unit": "–º–º–æ–ª—å/–ª",
                "unit_category": "concentration",
                "description": "–û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —É–≥–ª–µ–≤–æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞",
                "reference_ranges": {"normal": {"min": 3.9, "max": 5.5}}
            },
            {
                "code": "hemoglobin",
                "name": "–ì–µ–º–æ–≥–ª–æ–±–∏–Ω",
                "default_unit": "–≥/–ª", 
                "unit_category": "concentration",
                "description": "–ë–µ–ª–æ–∫ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤, –ø–µ—Ä–µ–Ω–æ—Å—è—â–∏–π –∫–∏—Å–ª–æ—Ä–æ–¥",
                "reference_ranges": {
                    "male": {"min": 130, "max": 160},
                    "female": {"min": 120, "max": 150}
                }
            },
            {
                "code": "cholesterol",
                "name": "–•–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω –æ–±—â–∏–π",
                "default_unit": "–º–º–æ–ª—å/–ª",
                "unit_category": "concentration", 
                "description": "–û–±—â–∏–π —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω –≤ –∫—Ä–æ–≤–∏",
                "reference_ranges": {"normal": {"max": 5.2}}
            },
            {
                "code": "creatinine",
                "name": "–ö—Ä–µ–∞—Ç–∏–Ω–∏–Ω",
                "default_unit": "–º–∫–º–æ–ª—å/–ª",
                "unit_category": "concentration",
                "description": "–ü—Ä–æ–¥—É–∫—Ç —Ä–∞—Å–ø–∞–¥–∞ –∫—Ä–µ–∞—Ç–∏–Ω–∞, –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—á–µ–∫",
                "reference_ranges": {
                    "male": {"min": 62, "max": 115},
                    "female": {"min": 53, "max": 97}
                }
            },
            {
                "code": "urea",
                "name": "–ú–æ—á–µ–≤–∏–Ω–∞",
                "default_unit": "–º–º–æ–ª—å/–ª",
                "unit_category": "concentration",
                "description": "–ö–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –±–µ–ª–∫–æ–≤–æ–≥–æ –æ–±–º–µ–Ω–∞",
                "reference_ranges": {"normal": {"min": 2.8, "max": 7.2}}
            },
            {
                "code": "alt",
                "name": "–ê–õ–¢ (–ê–ª–∞–Ω–∏–Ω–∞–º–∏–Ω–æ—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞–∑–∞)",
                "default_unit": "–ï–¥/–ª",
                "unit_category": "activity",
                "description": "–§–µ—Ä–º–µ–Ω—Ç –ø–µ—á–µ–Ω–∏",
                "reference_ranges": {
                    "male": {"max": 41},
                    "female": {"max": 31}
                }
            }
        ]
        
        created_count = 0
        for analyte_data in analytes_data:
            existing = db.query(Analyte).filter(Analyte.code == analyte_data["code"]).first()
            if not existing:
                analyte = Analyte(**analyte_data)
                db.add(analyte)
                created_count += 1
        
        db.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {created_count} –Ω–æ–≤—ã—Ö –∞–Ω–∞–ª–∏—Ç–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_users = db.query(User).count()
        total_analytes = db.query(Analyte).count()
        
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
        print(f"   üî¨ –ê–Ω–∞–ª–∏—Ç–æ–≤: {total_analytes}")
        print("   üìÑ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: 0")
        print("   üìà –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: 0")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        raise
    finally:
        db.close()

if __name__ == "__main__":
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö LabTrack...")
    init_database()
    print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")